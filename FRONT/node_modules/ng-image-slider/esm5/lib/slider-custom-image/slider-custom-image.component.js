/**
 * @fileoverview added by tsickle
 * Generated from: lib/slider-custom-image/slider-custom-image.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { DomSanitizer } from '@angular/platform-browser';
import { NgImageSliderService } from './../ng-image-slider.service';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './../ng-image-slider.service';
import * as ɵngcc2 from '@angular/platform-browser';
import * as ɵngcc3 from '@angular/common';

var _c0 = function (a0) { return { "ratio": a0 }; };
function SliderCustomImageComponent_div_0_img_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "img", 7);
    ɵngcc0.ɵɵlistener("load", function SliderCustomImageComponent_div_0_img_1_Template_img_load_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.imageLoading = false; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c0, ctx_r1.ratio))("src", ctx_r1.fileUrl, ɵngcc0.ɵɵsanitizeUrl)("alt", ctx_r1.alt)("title", ctx_r1.title);
    ɵngcc0.ɵɵattribute("loading", ctx_r1.lazy == true ? "lazy" : null);
} }
function SliderCustomImageComponent_div_0_iframe_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "iframe", 8);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("src", ctx_r2.fileUrl, ɵngcc0.ɵɵsanitizeResourceUrl);
    ɵngcc0.ɵɵattribute("loading", ctx_r2.lazy == true ? "lazy" : null);
} }
function SliderCustomImageComponent_div_0_video_3_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "video", 9);
    ɵngcc0.ɵɵlistener("click", function SliderCustomImageComponent_div_0_video_3_Template_video_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.videoClickHandler($event); });
    ɵngcc0.ɵɵelement(1, "source", 10);
    ɵngcc0.ɵɵtext(2, " Your browser does not support the video tag. ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("id", "video_" + ctx_r3.imageIndex)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c0, ctx_r3.ratio))("autoplay", ctx_r3.videoAutoPlay);
    ɵngcc0.ɵɵattribute("controls", ctx_r3.showVideoControls ? ctx_r3.showVideoControls : null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("src", ctx_r3.fileUrl, ɵngcc0.ɵɵsanitizeUrl);
} }
function SliderCustomImageComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtext(1, "Invalid file format");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("dir", ctx_r4.direction);
} }
function SliderCustomImageComponent_div_0_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 12);
} }
var _c1 = function (a0) { return { "ng-fullimage-loading": a0 }; };
function SliderCustomImageComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, SliderCustomImageComponent_div_0_img_1_Template, 1, 7, "img", 2);
    ɵngcc0.ɵɵtemplate(2, SliderCustomImageComponent_div_0_iframe_2_Template, 1, 2, "iframe", 3);
    ɵngcc0.ɵɵtemplate(3, SliderCustomImageComponent_div_0_video_3_Template, 3, 7, "video", 4);
    ɵngcc0.ɵɵtemplate(4, SliderCustomImageComponent_div_0_div_4_Template, 2, 1, "div", 5);
    ɵngcc0.ɵɵtemplate(5, SliderCustomImageComponent_div_0_span_5_Template, 1, 0, "span", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c1, ctx_r0.imageLoading));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.IMAGE && ctx_r0.fileUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.YOUTUBE && ctx_r0.fileUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.VIDEO);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.fileUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.YOUTUBE || ctx_r0.type === ctx_r0.VIDEO || ctx_r0.isVideo);
} }
var youtubeRegExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=|\?v=)([^#\&\?]*).*/;
/** @type {?} */
var validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'];
/** @type {?} */
var validVideoExtensions = ['mp4'];
var SliderCustomImageComponent = /** @class */ (function () {
    function SliderCustomImageComponent(imageSliderService, sanitizer, document) {
        this.imageSliderService = imageSliderService;
        this.sanitizer = sanitizer;
        this.YOUTUBE = 'youtube';
        this.IMAGE = 'image';
        this.VIDEO = 'video';
        this.fileUrl = '';
        this.fileExtension = '';
        this.type = this.IMAGE;
        this.imageLoading = true;
        // @inputs
        this.showVideo = false;
        this.videoAutoPlay = false;
        this.showVideoControls = 1;
        this.speed = 1;
        this.isVideo = false;
        this.alt = '';
        this.title = '';
        this.direction = 'ltr';
        this.ratio = false;
        this.lazy = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    SliderCustomImageComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (this.imageUrl
            && this.imageUrl
            && this.imageUrl
            && typeof (this.imageUrl) === 'string'
            && ((changes.imageUrl && changes.imageUrl.firstChange)
                ||
                    (this.videoAutoPlay))) {
            this.setUrl();
        }
    };
    /**
     * @return {?}
     */
    SliderCustomImageComponent.prototype.setUrl = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.imageUrl;
        this.imageLoading = true;
        this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);
        this.fileExtension = url.split('.').pop().split(/\#|\?/)[0];
        if (this.imageSliderService.base64FileExtension(url)
            && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1
                || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {
            this.fileExtension = this.imageSliderService.base64FileExtension(url);
        }
        // verify for youtube url
        /** @type {?} */
        var match = url.match(youtubeRegExp);
        if (match && match[2].length === 11) {
            if (this.showVideo) {
                this.type = this.YOUTUBE;
                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl("" + 'https://www.youtube.com/embed/' + match[2] + (this.videoAutoPlay ? '?autoplay=1&enablejsapi=1' : '?autoplay=0&enablejsapi=1') + '&controls=' + this.showVideoControls);
            }
            else {
                this.type = this.IMAGE;
                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl("https://img.youtube.com/vi/" + match[2] + "/0.jpg");
            }
        }
        else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {
            this.type = this.IMAGE;
        }
        else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {
            this.type = this.VIDEO;
            if (this.videoAutoPlay && document.getElementById("video_" + this.imageIndex)) {
                /** @type {?} */
                var videoObj_1 = document.getElementById("video_" + this.imageIndex);
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    videoObj_1.play();
                }), this.speed * 1000);
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SliderCustomImageComponent.prototype.videoClickHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event && event.srcElement && !this.showVideoControls) {
            if (event.srcElement.paused) {
                event.srcElement.play();
            }
            else {
                event.srcElement.pause();
            }
        }
    };
    /** @nocollapse */
    SliderCustomImageComponent.ctorParameters = function () { return [
        { type: NgImageSliderService },
        { type: DomSanitizer },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    SliderCustomImageComponent.propDecorators = {
        showVideo: [{ type: Input }],
        videoAutoPlay: [{ type: Input }],
        showVideoControls: [{ type: Input }],
        currentImageIndex: [{ type: Input }],
        imageIndex: [{ type: Input }],
        speed: [{ type: Input }],
        imageUrl: [{ type: Input }],
        isVideo: [{ type: Input }],
        alt: [{ type: Input }],
        title: [{ type: Input }],
        direction: [{ type: Input }],
        ratio: [{ type: Input }],
        lazy: [{ type: Input }]
    };
SliderCustomImageComponent.ɵfac = function SliderCustomImageComponent_Factory(t) { return new (t || SliderCustomImageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgImageSliderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };
SliderCustomImageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SliderCustomImageComponent, selectors: [["custom-img"]], inputs: { showVideo: "showVideo", videoAutoPlay: "videoAutoPlay", showVideoControls: "showVideoControls", speed: "speed", isVideo: "isVideo", alt: "alt", title: "title", direction: "direction", ratio: "ratio", lazy: "lazy", currentImageIndex: "currentImageIndex", imageIndex: "imageIndex", imageUrl: "imageUrl" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [["class", "custom-image-main", 3, "ngClass", 4, "ngIf"], [1, "custom-image-main", 3, "ngClass"], ["class", "image", 3, "ngClass", "src", "alt", "title", "load", 4, "ngIf"], ["class", "youtube", "frameborder", "0", "allow", "autoplay", "allowfullscreen", "", 3, "src", 4, "ngIf"], ["class", "video", "type", "video/mp4", "controlsList", "nodownload", 3, "id", "ngClass", "autoplay", "click", 4, "ngIf"], ["class", "invalid-msg", 3, "dir", 4, "ngIf"], ["class", "youtube-icon", 4, "ngIf"], [1, "image", 3, "ngClass", "src", "alt", "title", "load"], ["frameborder", "0", "allow", "autoplay", "allowfullscreen", "", 1, "youtube", 3, "src"], ["type", "video/mp4", "controlsList", "nodownload", 1, "video", 3, "id", "ngClass", "autoplay", "click"], ["type", "video/mp4", 3, "src"], [1, "invalid-msg", 3, "dir"], [1, "youtube-icon"]], template: function SliderCustomImageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SliderCustomImageComponent_div_0_Template, 6, 8, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.fileUrl);
    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgClass], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderCustomImageComponent, [{
        type: Component,
        args: [{
                selector: 'custom-img',
                template: "<div *ngIf=\"fileUrl\" class=\"custom-image-main\" [ngClass]=\"{'ng-fullimage-loading': imageLoading}\">\n    <img class=\"image\"\n        (load)=\"imageLoading = false\"\n        [ngClass]=\"{'ratio': ratio}\"\n        *ngIf=\"type === IMAGE && fileUrl\"\n        [src]=\"fileUrl\"\n        [alt]=\"alt\"\n        [title]=\"title\"\n        [attr.loading]=\"lazy == true ? 'lazy' : null\">\n    <iframe class=\"youtube\"\n        *ngIf=\"type === YOUTUBE && fileUrl\"\n        [src]=\"fileUrl\"\n        [attr.loading]=\"lazy == true ? 'lazy' : null\"\n        frameborder=\"0\"\n        allow=\"autoplay\"\n        allowfullscreen></iframe>\n    <video class=\"video\"\n        [id]=\"'video_' + imageIndex\"\n        [ngClass]=\"{'ratio': ratio}\"\n        (click)=\"videoClickHandler($event)\"\n        [autoplay]=\"videoAutoPlay\"\n        *ngIf=\"type === VIDEO\"\n        type=\"video/mp4\"\n        [attr.controls]=\"showVideoControls ? showVideoControls : null\"\n        controlsList=\"nodownload\">\n        <source [src]=\"fileUrl\" type=\"video/mp4\">\n        Your browser does not support the video tag.\n    </video>\n    <div [dir]=\"direction\" *ngIf=\"!fileUrl\" class=\"invalid-msg\">Invalid file format</div>\n    <span *ngIf=\"type === YOUTUBE || type === VIDEO || isVideo\" class=\"youtube-icon\"></span>\n</div>"
            }]
    }], function () { return [{ type: ɵngcc1.NgImageSliderService }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }]; }, { showVideo: [{
            type: Input
        }], videoAutoPlay: [{
            type: Input
        }], showVideoControls: [{
            type: Input
        }], speed: [{
            type: Input
        }], isVideo: [{
            type: Input
        }], alt: [{
            type: Input
        }], title: [{
            type: Input
        }], direction: [{
            type: Input
        }], ratio: [{
            type: Input
        }], lazy: [{
            type: Input
        }], currentImageIndex: [{
            type: Input
        }], imageIndex: [{
            type: Input
        }], imageUrl: [{
            type: Input
        }] }); })();
    return SliderCustomImageComponent;
}());
export { SliderCustomImageComponent };
if (false) {
    /** @type {?} */
    SliderCustomImageComponent.prototype.YOUTUBE;
    /** @type {?} */
    SliderCustomImageComponent.prototype.IMAGE;
    /** @type {?} */
    SliderCustomImageComponent.prototype.VIDEO;
    /** @type {?} */
    SliderCustomImageComponent.prototype.fileUrl;
    /** @type {?} */
    SliderCustomImageComponent.prototype.fileExtension;
    /** @type {?} */
    SliderCustomImageComponent.prototype.type;
    /** @type {?} */
    SliderCustomImageComponent.prototype.imageLoading;
    /** @type {?} */
    SliderCustomImageComponent.prototype.showVideo;
    /** @type {?} */
    SliderCustomImageComponent.prototype.videoAutoPlay;
    /** @type {?} */
    SliderCustomImageComponent.prototype.showVideoControls;
    /** @type {?} */
    SliderCustomImageComponent.prototype.currentImageIndex;
    /** @type {?} */
    SliderCustomImageComponent.prototype.imageIndex;
    /** @type {?} */
    SliderCustomImageComponent.prototype.speed;
    /** @type {?} */
    SliderCustomImageComponent.prototype.imageUrl;
    /** @type {?} */
    SliderCustomImageComponent.prototype.isVideo;
    /** @type {?} */
    SliderCustomImageComponent.prototype.alt;
    /** @type {?} */
    SliderCustomImageComponent.prototype.title;
    /** @type {?} */
    SliderCustomImageComponent.prototype.direction;
    /** @type {?} */
    SliderCustomImageComponent.prototype.ratio;
    /** @type {?} */
    SliderCustomImageComponent.prototype.lazy;
    /** @type {?} */
    SliderCustomImageComponent.prototype.imageSliderService;
    /**
     * @type {?}
     * @private
     */
    SliderCustomImageComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"file":"cloudinary-image.component.d.ts","sources":["cloudinary-image.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, QueryList, AfterViewInit, AfterContentChecked, OnInit, OnChanges, SimpleChanges, OnDestroy, Renderer2 } from '@angular/core';\nimport { Cloudinary } from './cloudinary.service';\nimport { CloudinaryTransformationDirective } from './cloudinary-transformation.directive';\nimport { CloudinaryPlaceHolder } from './cloudinary-placeholder.component';\nexport declare class CloudinaryImage implements AfterViewInit, OnInit, AfterViewInit, AfterContentChecked, OnChanges, OnDestroy {\n    private el;\n    private cloudinary;\n    private renderer;\n    publicId: string;\n    clientHints?: boolean;\n    loading: string;\n    width?: string;\n    height?: string;\n    accessibility?: string;\n    transformations: QueryList<CloudinaryTransformationDirective>;\n    placeholderComponent: CloudinaryPlaceHolder;\n    onLoad: EventEmitter<boolean>;\n    onError: EventEmitter<boolean>;\n    observer: MutationObserver;\n    shouldShowPlaceHolder: boolean;\n    options: object;\n    constructor(el: ElementRef, cloudinary: Cloudinary, renderer: Renderer2);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    ngAfterContentChecked(): void;\n    /**\n     * appends opacity and position to cl-img->img when placeholder is displayed\n     * removes styling from cl-img->img when placeholder does not display\n     */\n    setPlaceHolderStyle(): void;\n    hasLoaded(): void;\n    loadImage(): void;\n    setElementAttributes(element: any, attributesLiteral: any): void;\n    /**\n     * Handles placeholder options\n     * In case of responsive sets width from resize\n     * In case width or height is known takes 10% of original dimension\n     */\n    placeholderHandler(options: any, image: any): void;\n    accessibilityModeHandler(): string;\n}\n"]}
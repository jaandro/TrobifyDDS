{"version":3,"file":"ngx-spinner.umd.js","sources":["../../../projects/ngx-spinner/src/lib/ngx-spinner.enum.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.service.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.component.ts","../../../projects/ngx-spinner/src/lib/safe-html.pipe.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.module.ts","../../../projects/ngx-spinner/src/public_api.ts","../../../projects/ngx-spinner/src/ngx-spinner.ts"],"names":["BehaviorSubject","filter","Injectable","Subject","takeUntil","Component","ChangeDetectionStrategy","trigger","state","style","transition","animate","ChangeDetectorRef","Input","ViewChild","HostListener","Pipe","DomSanitizer","NgModule","CommonModule"],"mappings":"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","sourcesContent":["export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n  Z_INDEX: 99999,\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n  zIndex?: number;\n  template?: string;\n  showSpinner?: boolean;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n  zIndex: number;\n  template: string;\n  showSpinner: boolean;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  // private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\n  public spinnerObservable = new BehaviorSubject<NgxSpinner>(null);\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    return new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        if (spinner && Object.keys(spinner).length) {\n          spinner['name'] = name;\n          this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n          resolve(true);\n        } else {\n          this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n          resolve(true);\n        }\n      }, 10);\n    });\n\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER, debounce: number = 10) {\n    return new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n        resolve(true);\n      }, debounce);\n    });\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  HostListener,\n  ViewChild\n} from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('fadeIn', [\n      state('in', style({ opacity: 1 })),\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(300)\n      ]),\n      transition(':leave',\n        animate(200, style({ opacity: 0 })))\n    ])\n  ]\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * To set backdrop color\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor: string;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size;\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color: string;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type: string;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen: boolean;\n  /**\n   * Spinner name\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() name: string;\n  /**\n   * z-index value\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() zIndex: number;\n  /**\n   * Custom template for spinner/loader\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() template: string;\n  /**\n   * Show/Hide the spinner\n   *\n   * @type {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() showSpinner: boolean;\n\n  /**\n   * To enable/disable animation\n   *\n   * @type {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() disableAnimation: boolean = false;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's div\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number>;\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount: number;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show: boolean;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n  /**\n   * Element Reference\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @ViewChild('overlay') spinnerDOM;\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.spinnerDOM && this.spinnerDOM.nativeElement) {\n      event.returnValue = false;\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(private spinnerService: NgxSpinnerService, private changeDetector: ChangeDetectorRef) {\n    this.bdColor = DEFAULTS.BD_COLOR;\n    this.zIndex = DEFAULTS.Z_INDEX;\n    this.color = DEFAULTS.SPINNER_COLOR;\n    this.type = DEFAULTS.SPINNER_TYPE;\n    this.size = 'large';\n    this.fullScreen = true;\n    this.name = PRIMARY_SPINNER;\n    this.template = null;\n    this.showSpinner = false;\n\n    this.divArray = [];\n    this.divCount = 0;\n    this.show = false;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(\n        takeUntil(this.ngUnsubscribe)\n      )\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        if (spinner.show) {\n          this.onInputChange();\n        }\n        this.changeDetector.detectChanges();\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen,\n      divArray: this.divArray,\n      divCount: this.divCount,\n      show: this.show,\n      zIndex: this.zIndex,\n      template: this.template,\n      showSpinner: this.showSpinner\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    for (const propName in changes) {\n      if (propName) {\n        const changedProp = changes[propName];\n        if (changedProp.isFirstChange()) {\n          return;\n        } else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\n          if (changedProp.currentValue !== '') {\n            this.spinner[propName] = changedProp.currentValue;\n            if (propName === 'showSpinner') {\n              if (changedProp.currentValue) {\n                this.spinnerService.show(this.spinner.name, this.spinner);\n              } else {\n                this.spinnerService.hide(this.spinner.name);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  transform(v: string): SafeHtml {\n    if (v) {\n      return this._sanitizer.bypassSecurityTrustHtml(v);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\nimport { SafeHtmlPipe } from './safe-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent, SafeHtmlPipe],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n","/*\n * Public API Surface of ngx-spinner\n */\nexport * from './lib/ngx-spinner.service';\nexport * from './lib/ngx-spinner.component';\nexport * from './lib/ngx-spinner.module';\nexport * from './lib/ngx-spinner.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SafeHtmlPipe as ɵa} from './lib/safe-html.pipe';"]}
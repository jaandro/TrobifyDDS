{"version":3,"file":"ngx-spinner.js","sources":["../../../projects/ngx-spinner/src/lib/ngx-spinner.enum.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.service.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.component.ts","../../../projects/ngx-spinner/src/lib/safe-html.pipe.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.module.ts","../../../projects/ngx-spinner/src/public_api.ts","../../../projects/ngx-spinner/src/ngx-spinner.ts"],"names":[],"mappings":"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","sourcesContent":["export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n  Z_INDEX: 99999,\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n  zIndex?: number;\n  template?: string;\n  showSpinner?: boolean;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n  zIndex: number;\n  template: string;\n  showSpinner: boolean;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  // private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\n  public spinnerObservable = new BehaviorSubject<NgxSpinner>(null);\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    return new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        if (spinner && Object.keys(spinner).length) {\n          spinner['name'] = name;\n          this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n          resolve(true);\n        } else {\n          this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n          resolve(true);\n        }\n      }, 10);\n    });\n\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER, debounce: number = 10) {\n    return new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n        resolve(true);\n      }, debounce);\n    });\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  HostListener,\n  ViewChild\n} from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('fadeIn', [\n      state('in', style({ opacity: 1 })),\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(300)\n      ]),\n      transition(':leave',\n        animate(200, style({ opacity: 0 })))\n    ])\n  ]\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * To set backdrop color\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor: string;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size;\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color: string;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type: string;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen: boolean;\n  /**\n   * Spinner name\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() name: string;\n  /**\n   * z-index value\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() zIndex: number;\n  /**\n   * Custom template for spinner/loader\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() template: string;\n  /**\n   * Show/Hide the spinner\n   *\n   * @type {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() showSpinner: boolean;\n\n  /**\n   * To enable/disable animation\n   *\n   * @type {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() disableAnimation: boolean = false;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's div\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number>;\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount: number;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show: boolean;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n  /**\n   * Element Reference\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @ViewChild('overlay') spinnerDOM;\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.spinnerDOM && this.spinnerDOM.nativeElement) {\n      event.returnValue = false;\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(private spinnerService: NgxSpinnerService, private changeDetector: ChangeDetectorRef) {\n    this.bdColor = DEFAULTS.BD_COLOR;\n    this.zIndex = DEFAULTS.Z_INDEX;\n    this.color = DEFAULTS.SPINNER_COLOR;\n    this.type = DEFAULTS.SPINNER_TYPE;\n    this.size = 'large';\n    this.fullScreen = true;\n    this.name = PRIMARY_SPINNER;\n    this.template = null;\n    this.showSpinner = false;\n\n    this.divArray = [];\n    this.divCount = 0;\n    this.show = false;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(\n        takeUntil(this.ngUnsubscribe)\n      )\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        if (spinner.show) {\n          this.onInputChange();\n        }\n        this.changeDetector.detectChanges();\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen,\n      divArray: this.divArray,\n      divCount: this.divCount,\n      show: this.show,\n      zIndex: this.zIndex,\n      template: this.template,\n      showSpinner: this.showSpinner\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    for (const propName in changes) {\n      if (propName) {\n        const changedProp = changes[propName];\n        if (changedProp.isFirstChange()) {\n          return;\n        } else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\n          if (changedProp.currentValue !== '') {\n            this.spinner[propName] = changedProp.currentValue;\n            if (propName === 'showSpinner') {\n              if (changedProp.currentValue) {\n                this.spinnerService.show(this.spinner.name, this.spinner);\n              } else {\n                this.spinnerService.hide(this.spinner.name);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {\n  }\n\n  transform(v: string): SafeHtml {\n    if (v) {\n      return this._sanitizer.bypassSecurityTrustHtml(v);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\nimport { SafeHtmlPipe } from './safe-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent, SafeHtmlPipe],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n","/*\n * Public API Surface of ngx-spinner\n */\nexport * from './lib/ngx-spinner.service';\nexport * from './lib/ngx-spinner.component';\nexport * from './lib/ngx-spinner.module';\nexport * from './lib/ngx-spinner.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SafeHtmlPipe as ɵa} from './lib/safe-html.pipe';"]}